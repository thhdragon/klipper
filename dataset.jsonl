{"source_file": "docs/Config_Reference.md", "type": "safety_feature", "title": "Heater verification", "description": "Heater verification is automatically enabled for each heater that is configured on the printer. It monitors the heater temperature and raises an error if the temperature deviates too much from the target temperature. This helps to prevent thermal runaway and other heater-related failures.", "code_snippet": "[verify_heater heater_bed]\nmax_error: 120\ncheck_gain_time: 60\nhysteresis: 5\nheating_gain: 2", "lesson": "All heaters should have a verification mechanism to prevent thermal runaway. The verification parameters should be tuned to the specific heater and printer configuration."}
{"source_file": "docs/Config_Reference.md", "type": "safety_feature", "title": "MCU Shutdown on Temperature Range Error", "description": "The min_temp and max_temp parameters in a heater's configuration define a valid temperature range. If the measured temperature ever falls outside this range, the micro-controller will go into a shutdown state. This check can help detect some heater and sensor hardware failures.", "code_snippet": "[extruder]\nmin_temp: 0\nmax_temp: 270", "lesson": "Define a safe operating temperature range for all heaters to prevent damage from overheating or sensor failures."}
{"source_file": "docs/Config_Reference.md", "type": "safety_feature", "title": "Maximum Extrusion Cross-Section", "description": "The max_extrude_cross_section parameter prevents excessive amounts of extrusion during relatively small XY moves. If a move requests an extrusion rate that would exceed this value, it will cause an error to be returned.", "code_snippet": "[extruder]\nmax_extrude_cross_section: 50.0", "lesson": "Limit the maximum extrusion cross-section to prevent over-extrusion and potential damage to the printer."}
{"source_file": "docs/Config_Reference.md", "type": "safety_feature", "title": "Maximum Extrusion-Only Distance", "description": "The max_extrude_only_distance parameter limits the length of a retraction or extrude-only move. If a move requests a distance greater than this value, it will cause an error to be returned.", "code_snippet": "[extruder]\nmax_extrude_only_distance: 50.0", "lesson": "Limit the maximum length of retraction and extrude-only moves to prevent filament grinding and other extrusion issues."}
{"source_file": "docs/Config_Reference.md", "type": "safety_feature", "title": "Idle Timeout", "description": "An idle timeout is automatically enabled. If the printer is idle for a specified amount of time, a series of G-Code commands will be executed. The default is to turn off all heaters and disable the motors.", "code_snippet": "[idle_timeout]\ntimeout: 600\ngcode:\n  TURN_OFF_HEATERS\n  M84", "lesson": "Implement an idle timeout to automatically turn off heaters and motors when the printer is not in use, reducing the risk of fire and saving energy."}
{"source_file": "docs/Config_Reference.md", "type": "safety_feature", "title": "Force Move Enable", "description": "The FORCE_MOVE and SET_KINEMATIC_POSITION extended G-Code commands are disabled by default. They can be enabled by setting enable_force_move to True in the [force_move] section. Using these commands can place the printer in an invalid state, so they should be used with caution.", "code_snippet": "[force_move]\nenable_force_move: False", "lesson": "Disable dangerous or diagnostic-only features by default to prevent accidental misuse."}
{"source_file": "docs/FAQ.md", "type": "edge_case", "title": "Random 'Lost communication with MCU' errors", "description": "This error is commonly caused by hardware errors on the USB connection between the host machine and the micro-controller. Things to look for include a good quality USB cable, a good quality power supply for the Raspberry Pi, and checking for crimped or frayed wires.", "code_snippet": null, "lesson": "Seemingly random communication errors are often caused by underlying hardware issues. Always check the physical connections and power supplies before assuming a software bug."}
{"source_file": "docs/FAQ.md", "type": "edge_case", "title": "AVR device hangs on restart with restart_method=command", "description": "Some old versions of the AVR bootloader have a known bug in watchdog event handling. This typically manifests when the printer.cfg file has restart_method set to 'command'. The workaround is to use a different restart_method or to flash an updated bootloader.", "code_snippet": null, "lesson": "Firmware bugs in older bootloaders can cause unexpected behavior. If a feature is not working as expected, check for known issues with the hardware and firmware versions in use."}
{"source_file": "docs/FAQ.md", "type": "fallback", "title": "Heater shutdown on host crash", "description": "The host software needs to confirm heater enablement every 5 seconds. If the micro-controller does not receive a confirmation, it goes into a 'shutdown' state, which is designed to turn off all heaters and stepper motors. Additionally, the micro-controller is configured with a minimum and maximum temperature range for each heater, and will shut down if the temperature goes outside that range.", "code_snippet": null, "lesson": "Implement a multi-layered safety system with both host-level and micro-controller-level checks to ensure that critical components like heaters are shut down in the event of a failure."}
{"source_file": "config/example-cartesian.cfg", "type": "lesson_learned", "title": "Incorrectly configured parameters may cause damage", "description": "The example configuration files contain a warning that incorrectly configured parameters may cause damage. This highlights the importance of carefully reading and updating the configuration file before use.", "code_snippet": "# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT\n# FIRST. Incorrectly configured parameters may cause damage.", "lesson": "Always carefully review and understand the configuration parameters before using them. Incorrect values can lead to hardware damage."}
