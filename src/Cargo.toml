[package]
name = "klipper_mcu_rust"
version = "0.1.0"
edition = "2024"

# Define the library crate (src/lib.rs)
[lib]
name = "klipper_mcu_lib" # Give the library a distinct name
path = "src/lib.rs"
# The library itself doesn't need rt usually, unless it provides the entry point.
# For now, keep it minimal.

[[bin]]
name = "klipper_mcu_rust_firmware"
path = "src/main.rs"
# Required features for this binary to work on RP2040
features = ["rp2040"] # This enables rp2040-hal/rt for the binary

[dependencies]
# Dependencies for the library (and transitively for the binary)
bitflags = "*"
heapless = "*"
# The klipper_mcu_lib itself is a dependency for the binary if main.rs uses items from lib.rs
# This is implicitly handled if they are in the same crate root, or explicitly:
# klipper_mcu_lib = { path = "." } # This line is not strictly needed if main and lib are part of the same crate definition

# Dependencies only for the binary (e.g. main.rs) can go into a target-specific section if needed
# or if they are not shared with the library.
# For now, common dependencies are fine here.

embedded-hal = "*"

# RP2040 support
rp2040-hal = { version = "*", features = ["rp2040-usb"] } # Enable USB feature
cortex-m = "*"
cortex-m-rt = "*" # Check for the latest version, ensure compatibility with cortex-m

# USB Support
usb-device = "*" # Check for latest version
usbd-serial = "*" # Check for latest version, ensure compatibility with usb-device

# Defmt Logging
defmt = "*"        # Check for latest version
defmt-rtt = "*"    # Check for latest version, ensure compatibility with defmt

# For no_std with alloc (needed by trapq.rs which uses Vec)
# This requires nightly compiler and a global allocator definition.
# For now, I will assume the `alloc` feature can be enabled on a crate/module basis
# or that `trapq.rs` will be refactored to use `heapless::Vec` if truly no_std + no_alloc.
# The `klipper_rust_port/src/trapq.rs` has `#[cfg(feature = "alloc")]` which is good.
# We'll need to ensure this feature is properly handled during builds.

[features]
default = ["alloc"] # Make alloc a default feature
alloc = []
# Add a feature for the rp2040, could be useful for conditional compilation
rp2040 = ["rp2040-hal/rt"] # The "rt" feature from rp2040-hal pulls in the linker script and runtime

[dev-dependencies]
# For tests, especially for float comparisons in trapq.rs and itersolve.rs
float-cmp = "*"
